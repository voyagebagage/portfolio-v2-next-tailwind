{
    "sourceFile": "src/components/ui/AnimatedIconButton.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1723140227194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723184619245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,26 +12,15 @@\n const MotionButton = motion(Button);\n \n const AnimatedIconButton: React.FC<AnimatedIconButtonProps> = ({\n   children,\n-  className,\n   ...props\n }) => {\n   return (\n     <MotionButton\n       variant=\"ghost\"\n       size=\"icon\"\n-      className={`\n-        rounded-full \n-        opacity-90 \n-        bg-transparent\n-        hover:bg-gray-200 \n-        hover:text-gray-800 \n-        dark:hover:bg-gray-800 \n-        dark:hover:text-gray-200\n-        transition-colors\n-        ${className}\n-      `}\n+      className=\"rounded-full opacity-90 hover:bg-gray-200 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200\"\n       whileHover={{\n         scale: 1.2,\n         y: -4,\n         opacity: 1,\n"
                },
                {
                    "date": 1723184765474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,19 +12,31 @@\n const MotionButton = motion(Button);\n \n const AnimatedIconButton: React.FC<AnimatedIconButtonProps> = ({\n   children,\n+  className,\n   ...props\n }) => {\n   return (\n     <MotionButton\n       variant=\"ghost\"\n       size=\"icon\"\n-      className=\"rounded-full opacity-90 hover:bg-gray-200 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200\"\n+      className={`\n+        rounded-full \n+        opacity-90 \n+        bg-transparent\n+        hover:bg-gray-200 \n+        hover:text-gray-800 \n+        dark:hover:bg-gray-800 \n+        dark:hover:text-gray-200\n+        transition-colors\n+        ${className}\n+      `}\n       whileHover={{\n         scale: 1.2,\n         y: -4,\n         opacity: 1,\n+        color: \"gray.800\",\n       }}\n       whileTap={{ scale: 0.85 }}\n       transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n       {...props}>\n"
                },
                {
                    "date": 1723184830925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       whileHover={{\n         scale: 1.2,\n         y: -4,\n         opacity: 1,\n-        color: \"gray.800\",\n+        color: \"transparent\",\n       }}\n       whileTap={{ scale: 0.85 }}\n       transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n       {...props}>\n"
                },
                {
                    "date": 1723186083094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,65 @@\n-\"use client\";\n-\n import React from \"react\";\n-import { motion, MotionProps } from \"framer-motion\";\n-import { Button, ButtonProps } from \"@/components/ui/button\";\n+import { motion } from \"framer-motion\";\n \n-type AnimatedIconButtonProps = ButtonProps &\n-  MotionProps & {\n-    children: React.ReactNode;\n-  };\n+interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n+  variant?: \"solid\" | \"outline\" | \"ghost\";\n+  size?: \"sm\" | \"md\" | \"lg\";\n+  isLoading?: boolean;\n+}\n \n-const MotionButton = motion(Button);\n-\n-const AnimatedIconButton: React.FC<AnimatedIconButtonProps> = ({\n+const AnimatedIconButton: React.FC<ButtonProps> = ({\n   children,\n-  className,\n+  variant = \"solid\",\n+  size = \"md\",\n+  isLoading = false,\n+  className = \"\",\n   ...props\n }) => {\n+  const baseClasses =\n+    \"font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-200\";\n+\n+  const variantClasses = {\n+    solid: \"bg-primary text-white hover:bg-primary-dark\",\n+    outline:\n+      \"border border-primary text-primary hover:bg-primary hover:text-white\",\n+    ghost: \"text-primary hover:bg-primary hover:bg-opacity-10\",\n+  };\n+\n+  const sizeClasses = {\n+    sm: \"px-3 py-1.5 text-sm\",\n+    md: \"px-4 py-2 text-base\",\n+    lg: \"px-6 py-3 text-lg\",\n+  };\n+\n+  const buttonClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;\n+\n   return (\n-    <MotionButton\n-      variant=\"ghost\"\n-      size=\"icon\"\n-      className={`\n-        rounded-full \n-        opacity-90 \n-        bg-transparent\n-        hover:bg-gray-200 \n-        hover:text-gray-800 \n-        dark:hover:bg-gray-800 \n-        dark:hover:text-gray-200\n-        transition-colors\n-        ${className}\n-      `}\n-      whileHover={{\n-        scale: 1.2,\n-        y: -4,\n-        opacity: 1,\n-        color: \"transparent\",\n-      }}\n-      whileTap={{ scale: 0.85 }}\n-      transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n+    <motion.button\n+      className={buttonClasses}\n+      whileHover={{ scale: 1.05 }}\n+      whileTap={{ scale: 0.95 }}\n+      disabled={isLoading}\n       {...props}>\n+      {isLoading ? (\n+        <svg className=\"animate-spin h-5 w-5 mr-3\" viewBox=\"0 0 24 24\">\n+          <circle\n+            className=\"opacity-25\"\n+            cx=\"12\"\n+            cy=\"12\"\n+            r=\"10\"\n+            stroke=\"currentColor\"\n+            strokeWidth=\"4\"\n+          />\n+          <path\n+            className=\"opacity-75\"\n+            fill=\"currentColor\"\n+            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n+          />\n+        </svg>\n+      ) : null}\n       {children}\n-    </MotionButton>\n+    </motion.button>\n   );\n };\n \n export default AnimatedIconButton;\n"
                },
                {
                    "date": 1723191476904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,60 +6,21 @@\n   size?: \"sm\" | \"md\" | \"lg\";\n   isLoading?: boolean;\n }\n \n-const AnimatedIconButton: React.FC<ButtonProps> = ({\n-  children,\n-  variant = \"solid\",\n-  size = \"md\",\n-  isLoading = false,\n-  className = \"\",\n-  ...props\n-}) => {\n-  const baseClasses =\n-    \"font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-200\";\n-\n-  const variantClasses = {\n-    solid: \"bg-primary text-white hover:bg-primary-dark\",\n-    outline:\n-      \"border border-primary text-primary hover:bg-primary hover:text-white\",\n-    ghost: \"text-primary hover:bg-primary hover:bg-opacity-10\",\n-  };\n-\n-  const sizeClasses = {\n-    sm: \"px-3 py-1.5 text-sm\",\n-    md: \"px-4 py-2 text-base\",\n-    lg: \"px-6 py-3 text-lg\",\n-  };\n-\n-  const buttonClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;\n-\n-  return (\n-    <motion.button\n-      className={buttonClasses}\n-      whileHover={{ scale: 1.05 }}\n-      whileTap={{ scale: 0.95 }}\n-      disabled={isLoading}\n-      {...props}>\n-      {isLoading ? (\n-        <svg className=\"animate-spin h-5 w-5 mr-3\" viewBox=\"0 0 24 24\">\n-          <circle\n-            className=\"opacity-25\"\n-            cx=\"12\"\n-            cy=\"12\"\n-            r=\"10\"\n-            stroke=\"currentColor\"\n-            strokeWidth=\"4\"\n-          />\n-          <path\n-            className=\"opacity-75\"\n-            fill=\"currentColor\"\n-            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n-          />\n-        </svg>\n-      ) : null}\n-      {children}\n-    </motion.button>\n+const AnimatedIconButton : React.FC<IconButtonProps> = ({ children, href, onClick, className = \"\" }) => (\n+    <button\n+      onClick={onClick}\n+      className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-gray-700 transition-colors ${className}`}\n+    >\n+      {href ? (\n+        <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n+          {children}\n+        </Link>\n+      ) : (\n+        children\n+      )}\n+    </button>\n   );\n-};\n+  );\n \n export default AnimatedIconButton;\n"
                },
                {
                    "date": 1723191491398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import React from \"react\";\n import { motion } from \"framer-motion\";\n \n-interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n-  variant?: \"solid\" | \"outline\" | \"ghost\";\n-  size?: \"sm\" | \"md\" | \"lg\";\n-  isLoading?: boolean;\n-}\n+interface IconButtonProps {\n+    children: React.ReactNode;\n+    href?: string;\n+    onClick?: () => void;\n+    className?: string;\n+  }\n \n const AnimatedIconButton : React.FC<IconButtonProps> = ({ children, href, onClick, className = \"\" }) => (\n     <button\n       onClick={onClick}\n"
                },
                {
                    "date": 1723191500439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React from \"react\";\n import { motion } from \"framer-motion\";\n+import Link from \"next/link\";\n \n interface IconButtonProps {\n     children: React.ReactNode;\n     href?: string;\n"
                },
                {
                    "date": 1723191506703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,27 +2,30 @@\n import { motion } from \"framer-motion\";\n import Link from \"next/link\";\n \n interface IconButtonProps {\n-    children: React.ReactNode;\n-    href?: string;\n-    onClick?: () => void;\n-    className?: string;\n-  }\n+  children: React.ReactNode;\n+  href?: string;\n+  onClick?: () => void;\n+  className?: string;\n+}\n \n-const AnimatedIconButton : React.FC<IconButtonProps> = ({ children, href, onClick, className = \"\" }) => (\n-    <button\n-      onClick={onClick}\n-      className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-gray-700 transition-colors ${className}`}\n-    >\n-      {href ? (\n-        <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n-          {children}\n-        </Link>\n-      ) : (\n-        children\n-      )}\n-    </button>\n-  );\n-  );\n+const AnimatedIconButton: React.FC<IconButtonProps> = ({\n+  children,\n+  href,\n+  onClick,\n+  className = \"\",\n+}) => (\n+  <button\n+    onClick={onClick}\n+    className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-gray-700 transition-colors ${className}`}>\n+    {href ? (\n+      <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n+        {children}\n+      </Link>\n+    ) : (\n+      children\n+    )}\n+  </button>\n+);\n \n export default AnimatedIconButton;\n"
                },
                {
                    "date": 1723192013419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,18 +14,20 @@\n   href,\n   onClick,\n   className = \"\",\n }) => (\n-  <button\n+  <motion.button\n+    whileHover={{ scale: 1.2, y: -4 }}\n+    whileTap={{ scale: 0.9 }}\n     onClick={onClick}\n-    className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-gray-700 transition-colors ${className}`}>\n+    className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-primary text-primary hover:text-primary-foreground transition-colors ${className}`}>\n     {href ? (\n       <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n         {children}\n       </Link>\n     ) : (\n       children\n     )}\n-  </button>\n+  </motion.button>\n );\n \n export default AnimatedIconButton;\n"
                },
                {
                    "date": 1723192352589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+import React from \"react\";\n+import { color, motion } from \"framer-motion\";\n+import Link from \"next/link\";\n+\n+interface IconButtonProps {\n+  children: React.ReactNode;\n+  href?: string;\n+  onClick?: () => void;\n+  className?: string;\n+}\n+\n+const AnimatedIconButton: React.FC<IconButtonProps> = ({\n+  children,\n+  href,\n+  onClick,\n+  className = \"\",\n+}) => (\n+  <motion.button\n+    whileHover={{ scale: 1.2, y: -4, color: \"transparent\" }}\n+    whileTap={{ scale: 0.9 }}\n+    onClick={onClick}\n+    className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-primary text-primary hover:text-primary-foreground transition-colors ${className}`}>\n+    {href ? (\n+      <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n+        {children}\n+      </Link>\n+    ) : (\n+      children\n+    )}\n+  </motion.button>\n+);\n+\n+export default AnimatedIconButton;\n"
                },
                {
                    "date": 1723192417884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,5 @@\n import React from \"react\";\n-import { color, motion } from \"framer-motion\";\n-import Link from \"next/link\";\n-\n-interface IconButtonProps {\n-  children: React.ReactNode;\n-  href?: string;\n-  onClick?: () => void;\n-  className?: string;\n-}\n-\n-const AnimatedIconButton: React.FC<IconButtonProps> = ({\n-  children,\n-  href,\n-  onClick,\n-  className = \"\",\n-}) => (\n-  <motion.button\n-    whileHover={{ scale: 1.2, y: -4, color: \"transparent\" }}\n-    whileTap={{ scale: 0.9 }}\n-    onClick={onClick}\n-    className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-primary text-primary hover:text-primary-foreground transition-colors ${className}`}>\n-    {href ? (\n-      <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n-        {children}\n-      </Link>\n-    ) : (\n-      children\n-    )}\n-  </motion.button>\n-);\n-\n-export default AnimatedIconButton;\n-import React from \"react\";\n import { motion } from \"framer-motion\";\n import Link from \"next/link\";\n \n interface IconButtonProps {\n"
                },
                {
                    "date": 1723193133891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,14 +13,24 @@\n   children,\n   href,\n   onClick,\n   className = \"\",\n+  isActive = false,\n }) => (\n   <motion.button\n     whileHover={{ scale: 1.2, y: -4 }}\n     whileTap={{ scale: 0.9 }}\n     onClick={onClick}\n-    className={`w-10 h-10 rounded-full flex items-center justify-center bg-transparent hover:bg-primary text-primary hover:text-primary-foreground transition-colors ${className}`}>\n+    className={`\n+      w-10 h-10 rounded-full flex items-center justify-center\n+      bg-transparent border border-current\n+      text-modeDarkText dark:text-modeDarkText\n+      hover:bg-modeDarkText hover:text-modeDarkBg\n+      dark:hover:bg-modeDarkText dark:hover:text-modeDarkBg\n+      transition-colors duration-200\n+      ${isActive ? \"bg-modeDarkText text-modeDarkBg\" : \"\"}\n+      ${className}\n+    `}>\n     {href ? (\n       <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n         {children}\n       </Link>\n"
                },
                {
                    "date": 1723193147191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n   children: React.ReactNode;\n   href?: string;\n   onClick?: () => void;\n   className?: string;\n+  isActive?: boolean;\n }\n \n const AnimatedIconButton: React.FC<IconButtonProps> = ({\n   children,\n"
                },
                {
                    "date": 1723193362606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     whileTap={{ scale: 0.9 }}\n     onClick={onClick}\n     className={`\n       w-10 h-10 rounded-full flex items-center justify-center\n-      bg-transparent border border-current\n+      bg-transparent\n       text-modeDarkText dark:text-modeDarkText\n       hover:bg-modeDarkText hover:text-modeDarkBg\n       dark:hover:bg-modeDarkText dark:hover:text-modeDarkBg\n       transition-colors duration-200\n"
                },
                {
                    "date": 1723193921652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n   isActive = false,\n }) => (\n   <motion.button\n     whileHover={{ scale: 1.2, y: -4 }}\n+    transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n     whileTap={{ scale: 0.9 }}\n     onClick={onClick}\n     className={`\n       w-10 h-10 rounded-full flex items-center justify-center\n"
                },
                {
                    "date": 1723193936590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   isActive = false,\n }) => (\n   <motion.button\n     whileHover={{ scale: 1.2, y: -4 }}\n-    transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n+    // transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n     whileTap={{ scale: 0.9 }}\n     onClick={onClick}\n     className={`\n       w-10 h-10 rounded-full flex items-center justify-center\n"
                },
                {
                    "date": 1723194415062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   isActive = false,\n }) => (\n   <motion.button\n     whileHover={{ scale: 1.2, y: -4 }}\n-    // transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n+    transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n     whileTap={{ scale: 0.9 }}\n     onClick={onClick}\n     className={`\n       w-10 h-10 rounded-full flex items-center justify-center\n"
                }
            ],
            "date": 1723140227194,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React from \"react\";\nimport { motion, MotionProps } from \"framer-motion\";\nimport { Button, ButtonProps } from \"@/components/ui/button\";\n\ntype AnimatedIconButtonProps = ButtonProps &\n  MotionProps & {\n    children: React.ReactNode;\n  };\n\nconst MotionButton = motion(Button);\n\nconst AnimatedIconButton: React.FC<AnimatedIconButtonProps> = ({\n  children,\n  className,\n  ...props\n}) => {\n  return (\n    <MotionButton\n      variant=\"ghost\"\n      size=\"icon\"\n      className={`\n        rounded-full \n        opacity-90 \n        bg-transparent\n        hover:bg-gray-200 \n        hover:text-gray-800 \n        dark:hover:bg-gray-800 \n        dark:hover:text-gray-200\n        transition-colors\n        ${className}\n      `}\n      whileHover={{\n        scale: 1.2,\n        y: -4,\n        opacity: 1,\n      }}\n      whileTap={{ scale: 0.85 }}\n      transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n      {...props}>\n      {children}\n    </MotionButton>\n  );\n};\n\nexport default AnimatedIconButton;\n"
        }
    ]
}