{
    "sourceFile": "src/components/HeroSection/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1723187438395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1723187438395,
            "name": "Commit-0",
            "content": "\"use client\";\nimport { useState } from \"react\";\nimport NextLink from \"next/link\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport MaxWidthWrapper from \"../MaxWidthWrapper\";\nimport YStack from \"@/components/ui/YStack\";\nimport XStack from \"@/components/ui/XStack\";\nimport { useItem } from \"@/lib/fetchItem\";\nimport StackCard from \"./StackCard\";\nimport { TailwindNextImage } from \"../ui/TailwindNextImage\";\nimport { TriangleLogo } from \"../ui/TriangleLogo\";\nimport VideoModalButton from \"./VideoModalButton\";\n// import { useColor } from \"@/app/customHooks/useColor\";\n// import StackCard from \"./StackCard\";\n// import VideoModalButton from \"./VideoModalButton\";\n\nconst MotionButton = motion.button;\n\nconst whileHover = {\n  letsTalk: {\n    scale: 1.1,\n    color: [\"#fff\", \"#bff9e8\"],\n    background: `linear-gradient(to left, #64FFDA, #4ff3cc)`,\n    transition: {\n      backgroundColor: {\n        duration: 0.7,\n        ease: \"easeInOut\",\n        repeat: Infinity,\n        repeatType: \"loop\",\n      },\n      color: {\n        duration: 0.7,\n        ease: \"easeInOut\",\n        repeat: Infinity,\n        repeatType: \"loop\",\n      },\n    },\n  },\n  cv: {\n    scale: 1.1,\n  },\n};\n\nconst HeroSection = () => {\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  const { data: item, isPending, isFetching } = useItem();\n  // console.log(\"item color\", item?.color);\n  // console.log(\"isHovered  \" + isHovered);\n  return (\n    <MaxWidthWrapper className=\"flex items-center justify-center pt-[8.3vh] mt-6 bg-pink-200 bg-opacity-20\">\n      {/* <XStack className=\"w-full items-center\"> */}\n      <XStack\n        className={cn(\n          \"flex justify-end bg-slate-400 bg-opacity-10 gap-44 w-11/12 mb-6\",\n          \"flex-col md:flex-row\"\n        )}>\n        {/* <XStack className=\"flex items-center justify-center bg-slate-400\"> */}\n        <YStack className=\"items-center justify-center \">\n          <StackCard />\n          <XStack className=\"mt-4 mb-2 \">\n            <MotionButton\n              className=\"flex items-center px-3 py-2 font-semibold text-white rounded\"\n              animate={{\n                color: [\"#fff\", \"#4ff3cc\"],\n                backgroundColor: [item?.color, \"#565C60\"],\n              }}\n              whileTap={{ scale: 0.8 }}\n              whileHover={whileHover.letsTalk}\n              transition={{\n                backgroundColor: {\n                  duration: 2,\n                  ease: \"easeIn\",\n                  repeat: Infinity,\n                  repeatType: \"loop\",\n                },\n                color: {\n                  duration: 2,\n                  ease: \"easeIn\",\n                  repeat: Infinity,\n                  repeatType: \"loop\",\n                },\n              }}>\n              <NextLink\n                href=\"https://wa.me/33769654361?message=urlencodedtext I have a 10k job for you.\"\n                legacyBehavior\n                passHref>\n                <a target=\"_blank\" rel=\"noopener noreferrer\">\n                  Let&apos;s Talk\n                </a>\n              </NextLink>\n            </MotionButton>\n            <MotionButton\n              className=\"flex items-center px-3 py-2 ml-4 font-semibold text-white rounded\"\n              whileTap={{ scale: 0.8 }}\n              whileHover={whileHover.cv}>\n              <a\n                href=\"/CV DEV 2023.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                CV\n              </a>\n            </MotionButton>\n          </XStack>\n        </YStack>\n        {/* </XStack> */}\n        <XStack className=\"relative items-start justify-end cursor-pointer w-2/5 h-4/6 pl-2 gap-4 group\">\n          <TailwindNextImage\n            src=\"/ProfilePic.png\"\n            alt=\"ProfilePic\"\n            priority={true}\n            fill\n            imageObjectFit=\"contain\"\n            // className=\"w-[298px] h-[298px] rounded-full flex-shrink-0 shadow-lg\"\n            onMouseEnter={() => setIsHovered(true)}\n            // onMouseLeave={() => setIsHovered(false)}\n            className={cn(\n              \"w-[298px] h-[298px] flex-shrink-0 border-[10px]\",\n              \"rounded-full shadow-lg\",\n              \"transition-all duration-300 ease-in-out transform\",\n              isHovered ? \"scale-105\" : \"scale-100\"\n            )}\n            sizes=\"(max-width: 768px) 50vw,\n          (max-width: 1200px) 50vw,\n          33vw\"\n            style={{\n              border: \"2px solid red\",\n              backgroundImage: `linear-gradient(to right, ${\n                item?.color || \"#60DBFA\"\n              }, #4ff3cc, ${item?.color || \"#60DBFA\"})`,\n\n              borderColor: \"modeDarkBg\",\n            }}\n          />\n          <TriangleLogo className=\"flex \" />\n          <VideoModalButton isHovered={isHovered} setIsHovered={setIsHovered} />\n        </XStack>\n      </XStack>\n      {/* </XStack> */}\n    </MaxWidthWrapper>\n  );\n};\n\nexport default HeroSection;\n"
        }
    ]
}